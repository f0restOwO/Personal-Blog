<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yang.dao.CatalogDao">
    <resultMap type="com.yang.entity.Catalog" id="BaseResultMap">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="keywords" property="keywords" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="BIT"/>
    </resultMap>

    <resultMap id="ResultMapWithBLOBs" type="com.yang.entity.Catalog" extends="BaseResultMap">
        <result column="desc" property="desc" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, keywords, type
    </sql>
    <sql id="Blob_Column_List">
        desc
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from catalog
        where id = #{id, jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from catalog
        where id = #{id, jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.yang.entity.Catalog">
        insert into catalog(
        id, name, keywords, type, desc
        )
        Values(
        #{id}, #{name}, #{keywords}, #{type}, #{desc}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.yang.entity.Catalog">
        insert into catalog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="keywords != null">
                keywords,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="desc != null">
                desc,
            </if>
        </trim>
        <trim prefix="valuse(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id, jdbcType=INTEGER}
            </if>
            <if test="name != null">
                #{name, jdbcType=VARCHAR}
            </if>
            <if test="keywords != null">
                #{keywords, jdbcType=VARCHAR}
            </if>
            <if test="type != null">
                #{type, jdbcType=BIT}
            </if>
            <if test="desc != null">
                #{desc, jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.yang.entity.Catalog" >
        update catalog
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="keywords != null" >
                keywords = #{keywords,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=BIT},
            </if>
            <if test="desc != null" >
                desci = #{desci,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yang.entity.Catalog" >
    update catalog
    set name = #{name,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      desci = #{desci,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.yang.entity.Catalog" >
    update catalog
    set name = #{name,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>

